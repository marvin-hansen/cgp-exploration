[workspace]
resolver = "2"

members = [
    "queng_common/*",
    "queng_extensions/*",
    "queng_integration/data/*",
    "queng_integration/traits/*",
    "queng_macros/*",
    "queng_sbe/*",
]
exclude = [
    "queng_sbe/sbe_schema",
]

[workspace.package]
edition = "2021"
rust-version = "1.82.0"
readme = "README.md"
repository = "https://github.com/marvin-hansen/cgp-exploration"
authors = ["Marvin Hansen <marvin.hansen@gmail.com>"]

# Linting with clippy
[workspace.lints.clippy]
all = "warn"

# Linting strict mode
[workspace.lints.rust]
# Warnings
deprecated-safe = "warn"
deprecated_safe_2024 = "warn"

# Optimize all crates
[profile.release]
opt-level = 3
strip = true  # Automatically strip debug symbols from the binary
lto = true    # Enable Link Time Optimization (LTO)
codegen-units = 1 # Reduce Parallel Code Generation Units to Increase Optimization

# There's a Cargo feature named profile-overrides
# that lets you override the optimization level of dependencies.
# https://docs.rust-embedded.org/book/unsorted/speed-vs-size.html
[profile.release.package."*"]
opt-level = 3
strip = 'debuginfo'  # Automatically strip debug infos from the binary to reduce size
codegen-units = 1 # Reduce Parallel Code Generation Units to Increase Optimization

[workspace.dependencies]
# ==============
# Internal Aliases
# ==============

# Common
common_data_bar = { path = "queng_common/common_data_bar" }
common_errors = { path = "queng_common/common_errors" }
common_exchange = { path = "queng_common/common_exchange" }

# Extensions
common_data_bar_ext = { path = "queng_extensions/common_data_bar_ext" }
cow_ext = { path = "queng_extensions/cow_ext" }

# Integration
# Data integration
binance_core_data_integration = { path = "queng_integration/data/binance_core_data_integration" }
binance_spot_data_integration = { path = "queng_integration/data/binance_spot_data_integration" }
binance_usd_futures_data_integration = { path = "queng_integration/data/binance_usd_futures_data_integration" }
binance_coin_futures_data_integration = { path = "queng_integration/data/binance_coin_futures_data_integration" }
# Traits
trait_data_integration = { path = "queng_integration/traits/trait_data_integration" }

# Macros
binance_data_integration_macro = { path = "queng_macros/binance_data_integration_macro" }
data_integration_macro = { path = "queng_macros/data_integration_macro" }


# SBE
sbe_bindings = { path = "queng_sbe/sbe_bindings" }
sbe_messages_client = { path = "queng_sbe/sbe_messages_client" }
sbe_messages_control = { path = "queng_sbe/sbe_messages_control" }
sbe_messages_data = { path = "queng_sbe/sbe_messages_data" }
sbe_types = { path = "queng_sbe/sbe_types" }
sbe_utils = { path = "queng_sbe/sbe_utils" }


# ==============
# External crates
# ==============
# Dependencies for macros
syn = { version = "2.0", features = ["full", "extra-traits"] }
quote = "1.0"
trait-variant = { version = "0.1.2" }
# Regular dependencies
chrono = { version = "0.4.38", features = ["serde"] }
rust_decimal = { version = "1.36" }
futures = { version = "0.3.31" }
futures-util = {version = "0.3.31"}
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "json", "blocking", "gzip"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
rustls = { version = "0.23", features = ["ring"] }
tokio = { version = "1.42", default-features = false, features = ["macros", "net", "rt-multi-thread", "signal", "time"] }
tokio-tungstenite = { version = "0.26.0", features = ["rustls-tls-webpki-roots"]}
