###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//thirdparty:crates_vendor
###############################################################################

load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "rustls_platform_verifier",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=rustls-platform-verifier",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-apple-ios": [],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [],
        "@rules_rust//rust/platform:aarch64-linux-android": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [],
        "@rules_rust//rust/platform:aarch64-unknown-uefi": [],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:i686-apple-darwin": [],
        "@rules_rust//rust/platform:i686-linux-android": [],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:thumbv7em-none-eabi": [],
        "@rules_rust//rust/platform:thumbv8m.main-none-eabi": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:wasm32-wasip1": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-apple-ios": [],
        "@rules_rust//rust/platform:x86_64-linux-android": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-none": [],
        "@rules_rust//rust/platform:x86_64-unknown-uefi": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.4.0",
    deps = [
        "//thirdparty/crates/log-0.4.25:log",
        "//thirdparty/crates/once_cell-1.20.3:once_cell",
        "//thirdparty/crates/rustls-0.23.22:rustls",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:aarch64-linux-android": [
            "//thirdparty/crates/jni-0.19.0:jni",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-platform-verifier-android-0.1.1:rustls_platform_verifier_android",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_os = "android")
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "//thirdparty/crates/windows-sys-0.52.0:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [
            "//thirdparty/crates/jni-0.19.0:jni",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-platform-verifier-android-0.1.1:rustls_platform_verifier_android",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_os = "android")
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:i686-apple-darwin": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:i686-linux-android": [
            "//thirdparty/crates/jni-0.19.0:jni",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-platform-verifier-android-0.1.1:rustls_platform_verifier_android",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_os = "android")
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "//thirdparty/crates/windows-sys-0.52.0:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_arch = "wasm32")
            "//thirdparty/crates/webpki-root-certs-0.26.8:webpki_root_certs",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:wasm32-wasip1": [
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_arch = "wasm32")
            "//thirdparty/crates/webpki-root-certs-0.26.8:webpki_root_certs",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "//thirdparty/crates/core-foundation-0.9.4:core_foundation",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/core-foundation-sys-0.8.7:core_foundation_sys",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-2.11.1:security_framework",  # cfg(any(target_vendor = "apple"))
            "//thirdparty/crates/security-framework-sys-2.14.0:security_framework_sys",  # cfg(any(target_vendor = "apple"))
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "//thirdparty/crates/jni-0.19.0:jni",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-platform-verifier-android-0.1.1:rustls_platform_verifier_android",  # cfg(target_os = "android")
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(target_os = "android")
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "//thirdparty/crates/windows-sys-0.52.0:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [
            "//thirdparty/crates/rustls-native-certs-0.7.3:rustls_native_certs",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
            "//thirdparty/crates/rustls-webpki-0.102.8:webpki",  # cfg(all(unix, not(target_os = "android"), not(target_vendor = "apple"), not(target_arch = "wasm32")))
        ],
        "//conditions:default": [],
    }),
)
